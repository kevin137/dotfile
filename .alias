import argparse, os, subprocess
from time import strftime, gmtime
parser = argparse.ArgumentParser()
parser.add_argument('cmdline_args', nargs='*', help='arguments to pass')
args = parser.parse_args()

def dump_file_table(args):
    print('{:<19}\t{:<10}\t{:<10}\t{:<32}\t{:<25}\t{}'.format(
            '#timestamp', 'epoch', 'size', 'md5', 'type', 'fullpath'))
    rootpath = args[0] if args else '.'
    for root, dirs, files in os.walk(rootpath):
        for name in files:
            if not os.path.isfile(os.path.join(root, name)):
                continue
            fullpath = os.path.join(root,name)
            stat = os.stat(fullpath)
            timestamp = strftime("%Y-%m-%dT%H:%M:%S", gmtime(stat.st_mtime))
            epoch, size = int(stat.st_mtime), int(stat.st_size)
            md5 = subprocess.run(['md5sum', fullpath], 
                    capture_output=True).stdout.split()[0].decode('utf-8')
            type = subprocess.run(['file', '-b', '-i', fullpath], 
                    capture_output=True).stdout.split()[0].decode('utf-8')
            print('{:<19}\t{:>10}\t{:>10}\t{:<32}\t{:<25}\t{}'.format(
                    timestamp, epoch, size, md5, type, fullpath))

try:
    func_name = str((args.cmdline_args)[0])
    func_args = (args.cmdline_args)[1:]
    r = globals()[func_name](args=func_args)
except:
    print('python alias ' + ' '.join(args.cmdline_args) + ' failed')

def bash_alias():
    r'''
    #END_PYTHON
    #BEGIN_BASH_ALIAS
    history_dir=$HOME/Documents/History

    # bash history management
    alias h='history; echo ----------; history | head -n1; history | grep "$( cat $history_dir/$( ls -1rt $history_dir | tail -n1 ) | grep \#\#\ history_marker | tail -n1 )"; history | tail -n1'
    alias hm='history -s \#\# history_marker $HOSTNAME $( date --rfc-3339=seconds )'
    alias hgrep='history | cat $history_dir/bash_history_*.txt - | grep $@'
    alias hbackup='history -s \#\# history_marker $HOSTNAME $( date --rfc-3339=seconds ) history_backup && history -w && cp $HOME/.bash_history $history_dir/$(date +bash_history_%Y-%m-%dT%H-%M-%S.txt)'
    #alias away='history -s \#\# history_marker $HOSTNAME $( date --rfc-3339=seconds ) stepped_away && xdg-screensaver lock'

    alias now='date +[%V]\ %A\,\ %Y-%m-%d\ %H:%M:%S'
    alias dfh='df -h -x"squashfs" -x"tmpfs" -x"udev"'
    alias t='gnome-terminal --window'
    alias op='xdg-open'
    alias ol='cat $HOME/.alias $HOME/.bash_work $HOME/.gnome_shell_f | grep -i -A1 $@ '

    alias ctab="column --table --separator $'\t' --output-separator $'\t'"
    alias ft='python3 $HOME/.alias dump_file_table $@'
    alias exdot=' grep -Fv -e /snap/ -e /.git/ -e /.venv/ -e /.local/ -e /.cache/ -e /.ccache/ -e /.config/ -e /.vscode/ -e /.thunderbird/ '
    alias extree=' grep -Fv -e /.wine/ -e /linuxptp/code/ -e /labjack/modbus/ -e /LTspiceXVII/lib/ -e /LTspiceXVII/examples/ -e /zephyr/build/ -e /zephyrproject/modules/ -e /zephyrproject/zephyr/ -e /zephyrproject/tools/ -e /zephyrproject/bootloader/ '

    # Notepad++ (wine)
    alias npp='echo; [ -f $HOME/.wine/drive_c/Local/Npp/notepad++.exe ] && pushd $HOME/share && ( wine "C:\Local\Npp\notepad++.exe" & ) && popd && echo Notepad++ started || echo Notepad++ not found '
    # LTspice (wine)
    alias lts='echo; [ -f $HOME/.wine/drive_c/Local/LTspice/XVIIx64.exe ] && pushd $HOME/share && ( wine "$HOME/.wine/drive_c/Local/LTspice/XVIIx64.exe" & ) && popd && echo LTspice started || echo LTspice not found '

    # Telegram desktop
    alias tg='telegram-desktop 2> /dev/null &'

    # Telegram web
    alias ptg='firefox --private-window https://web.telegram.org/#/login 2> /dev/null &'

    # WhatsApp web
    alias pwa='firefox --private-window https://web.whatsapp.com/ 2> /dev/null &'

    # Gmail
    alias pgm='firefox --private-window https://www.gmail.com/ 2> /dev/null &' 

    # YouTube
    alias pyt='firefox --private-window https://www.youtube.com/ 2> /dev/null &' 

    # GitHub
    alias pgh='firefox --private-window https://github.com/login 2> /dev/null &' 

    # get latest version of this aliases file
    alias get_latest_alias='  wget --output-document=/tmp/latest_alias https://raw.githubusercontent.com/kevin137/dotfile/master/.alias && mv $HOME/.alias /tmp/alias.$( date +%Y-%m-%d-%H-%M-%S ) && mv /tmp/latest_alias $HOME/.alias '

    return
    #END_BASH_ALIAS
    '''

def gnome_shell_f():
    r'''
    #BEGIN_GNOME_SHELL_F
    #!/bin/bash
    # custom functions for use in gnome shell (and command-line)

    function help {
        echo available functions:
        declare -F | cut -d\  -f3-
    }

    function worldtime {
        echo -n 🌐; for tz in America/Los_Angeles America/Chicago Europe/Madrid Asia/Shanghai; do echo -n \  \|\ \ $( echo $tz | cut -d/ -f2) $( TZ=$tz date +%H:%M ); done; echo
    }

    function titlebar_now {
        date '+[%V] %A'
    }

    function ipv4 {
        for ip in $( ip -4 addr | grep -v 127.0.0.1 | grep inet | tr -s ' ' '@' | cut -d@ -f3 ); do echo -n $ip \ \|\  ; done; echo -n \  ; hostname
    }

    function away {
        echo \#\# xdg-scr_lock $HOSTNAME $( date --rfc-3339=seconds ) stepped_away | tee -a /tmp/away && xdg-screensaver lock
    }

    function ppp {
        # Telegram, WhatsApp, Gmail, and Alpha in one command, for use first thing in the morning
        ( ( telegram-desktop 2> /dev/null & ) & 
        google-chrome --incognito 'https://web.telegram.org/#/login' 2> /dev/null & ) & 
        ( sleep 7 && google-chrome --incognito 'https://web.whatsapp.com/' 2> /dev/null & ) & 
        ( sleep 14 && google-chrome --incognito 'https://www.gmail.com/' 2> /dev/null & ) & 
        ( sleep 21 && google-chrome --incognito 'https://www.wolframalpha.com/' 2> /dev/null & ) & 
    }

    function install_npp {
        # Download and install Notepad++
        variant=portable.x64.7z && install=$HOME/.wine/drive_c/Local/Npp && site=https://github.com && latest=$site/notepad-plus-plus/notepad-plus-plus/releases/latest && portable=$site$( wget -q -O - $latest | grep href=.*$variant\" | tr \  \\n | grep href | cut -d= -f2 | tr -d \" ) && echo PORTABLE $portable && downloaded=$( wget $portable 2>&1 | grep saved | strings | grep $variant ) && echo DOWNLOADED $downloaded && checksum=$( wget -q -O - $latest | grep $variant | grep -E '^[0-9a-f]+ +.*'$variant | cut -d\  -f1 ) && echo -e CHECKSUM\\n$checksum && sha256sum $downloaded | grep $checksum && 7z -o$install x $downloaded && rm $downloaded && wine $install/notepad++.exe $install/change.log && sed -i '/Default Style/ s/Courier New/Noto Mono/' $install/stylers.xml && grep Default\ Style $install/stylers.xml && echo Notepad++ installed, type npp to run
    }

    function install_ltspice {
        # Download and install LTspice
        variant=LTspiceXVII.exe && install=$HOME/.wine/drive_c/Local/LTspice && site=https://ltspice.analog.com && latest=$site/software/$variant && downloaded=$( wget $latest 2>&1 | grep saved | strings | grep $variant ) && echo DOWNLOADED $downloaded && echo install in $install && wine $downloaded && LTspice installed, type lts to run
    }

    function llssh {
        # this is a nice idea, but it is not working for now
        sshuser=$1; shift
        [[ ! -z "$sshuser" ]] && sshuser="-l $sshuser" 
        dev=$( nmcli con show --active | grep ethernet | cut -d\  -f7 | tail -n1 ); 
        echo -n $dev \ \ 
        mac=$( ip neighbor show | grep $dev | cut -d\  -f5 ); 
        echo mac $mac
        ipv6ll=$( echo fe80::$( echo $mac | cut -c1 )$( echo $mac | cut -c2 | tr "0123456789abcdef" "23016745ab89efcd" )$( echo $mac | cut -c4,5,6,7,8 )ff:fe$( echo $mac | cut -c10,11,12,13,14,16,17 )%$dev ); 
        ping -c2 $ipv6ll && echo ssh $sshuser $ipv6ll $@
    }

    called_as=${0##*/}
    base_script=$(basename -- "$(readlink -f -- "$0")")

    if [ "$called_as" == "$base_script" ] ; then
        if [ $# -eq 0 ]; then
            :
            #echo nothing specified, available functions:
	          #declare -F | cut -d\  -f3-
        else
            if type $1 &>/dev/null ; then
                #echo $1 is a function
                #echo about to run $@ 
	              $@
            else
                echo $1 has not been defined
            fi
        fi
    else
        #echo called from a symlink
        if type $called_as &>/dev/null ; then
            #echo $called_as is a function
            #echo about to run $called_as $@ 
	          $called_as $@
        else
            echo $called_as has not been defined
        fi
    fi
    #END_GNOME_SHELL_F
    # Notes:
    #   Ubuntu hotkeys:
    #     Move windows between displays : Super+Shift+Arrow 
    #   Special terminal sequences:
    #     Breaking out of stuck ssh session : <Enter><Enter>~.
    #     Breaking out of stuck ssh session : <Enter><Enter><AltGr+'4'>.
    '''
